//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.1.
// 
#pragma warning disable 1591

namespace Business.MagfaBulkWebService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="TSOAPSoapBinding", Namespace="http://magfa.com/soap/BulkSoap")]
    public partial class BulkSoapImplService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback getProvincesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCountByCityProvinceOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCountByPrefixOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCountByPostCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback addRecipientsByPrefixOperationCompleted;
        
        private System.Threading.SendOrPostCallback addRecipientsByPostCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback removeRecipientsOperationCompleted;
        
        private System.Threading.SendOrPostCallback submitBulkOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCitiesOfProvinceOperationCompleted;
        
        private System.Threading.SendOrPostCallback createBulkOperationCompleted;
        
        private System.Threading.SendOrPostCallback addRecipientsByCityProvinceOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPriceOperationCompleted;
        
        private System.Threading.SendOrPostCallback getBulkStatusOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public BulkSoapImplService() {
            this.Url = global::Business.Properties.Settings.Default.Business_MagfaBulkWebService_BulkSoapImplService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event getProvincesCompletedEventHandler getProvincesCompleted;
        
        /// <remarks/>
        public event getCountByCityProvinceCompletedEventHandler getCountByCityProvinceCompleted;
        
        /// <remarks/>
        public event getCountByPrefixCompletedEventHandler getCountByPrefixCompleted;
        
        /// <remarks/>
        public event getCountByPostCodeCompletedEventHandler getCountByPostCodeCompleted;
        
        /// <remarks/>
        public event addRecipientsByPrefixCompletedEventHandler addRecipientsByPrefixCompleted;
        
        /// <remarks/>
        public event addRecipientsByPostCodeCompletedEventHandler addRecipientsByPostCodeCompleted;
        
        /// <remarks/>
        public event removeRecipientsCompletedEventHandler removeRecipientsCompleted;
        
        /// <remarks/>
        public event submitBulkCompletedEventHandler submitBulkCompleted;
        
        /// <remarks/>
        public event getCitiesOfProvinceCompletedEventHandler getCitiesOfProvinceCompleted;
        
        /// <remarks/>
        public event createBulkCompletedEventHandler createBulkCompleted;
        
        /// <remarks/>
        public event addRecipientsByCityProvinceCompletedEventHandler addRecipientsByCityProvinceCompleted;
        
        /// <remarks/>
        public event getPriceCompletedEventHandler getPriceCompleted;
        
        /// <remarks/>
        public event getBulkStatusCompletedEventHandler getBulkStatusCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://magfa.com/soap/BulkSoap", ResponseNamespace="http://magfa.com/soap/BulkSoap")]
        [return: System.Xml.Serialization.SoapElementAttribute("getProvincesReturn")]
        public string[] getProvinces() {
            object[] results = this.Invoke("getProvinces", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void getProvincesAsync() {
            this.getProvincesAsync(null);
        }
        
        /// <remarks/>
        public void getProvincesAsync(object userState) {
            if ((this.getProvincesOperationCompleted == null)) {
                this.getProvincesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetProvincesOperationCompleted);
            }
            this.InvokeAsync("getProvinces", new object[0], this.getProvincesOperationCompleted, userState);
        }
        
        private void OngetProvincesOperationCompleted(object arg) {
            if ((this.getProvincesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getProvincesCompleted(this, new getProvincesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://magfa.com/soap/BulkSoap", ResponseNamespace="http://magfa.com/soap/BulkSoap")]
        [return: System.Xml.Serialization.SoapElementAttribute("getCountByCityProvinceReturn")]
        public int getCountByCityProvince(int provinceId, int cityId, int type) {
            object[] results = this.Invoke("getCountByCityProvince", new object[] {
                        provinceId,
                        cityId,
                        type});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void getCountByCityProvinceAsync(int provinceId, int cityId, int type) {
            this.getCountByCityProvinceAsync(provinceId, cityId, type, null);
        }
        
        /// <remarks/>
        public void getCountByCityProvinceAsync(int provinceId, int cityId, int type, object userState) {
            if ((this.getCountByCityProvinceOperationCompleted == null)) {
                this.getCountByCityProvinceOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCountByCityProvinceOperationCompleted);
            }
            this.InvokeAsync("getCountByCityProvince", new object[] {
                        provinceId,
                        cityId,
                        type}, this.getCountByCityProvinceOperationCompleted, userState);
        }
        
        private void OngetCountByCityProvinceOperationCompleted(object arg) {
            if ((this.getCountByCityProvinceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCountByCityProvinceCompleted(this, new getCountByCityProvinceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://magfa.com/soap/BulkSoap", ResponseNamespace="http://magfa.com/soap/BulkSoap")]
        [return: System.Xml.Serialization.SoapElementAttribute("getCountByPrefixReturn")]
        public int getCountByPrefix(string prefix, int type) {
            object[] results = this.Invoke("getCountByPrefix", new object[] {
                        prefix,
                        type});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void getCountByPrefixAsync(string prefix, int type) {
            this.getCountByPrefixAsync(prefix, type, null);
        }
        
        /// <remarks/>
        public void getCountByPrefixAsync(string prefix, int type, object userState) {
            if ((this.getCountByPrefixOperationCompleted == null)) {
                this.getCountByPrefixOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCountByPrefixOperationCompleted);
            }
            this.InvokeAsync("getCountByPrefix", new object[] {
                        prefix,
                        type}, this.getCountByPrefixOperationCompleted, userState);
        }
        
        private void OngetCountByPrefixOperationCompleted(object arg) {
            if ((this.getCountByPrefixCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCountByPrefixCompleted(this, new getCountByPrefixCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://magfa.com/soap/BulkSoap", ResponseNamespace="http://magfa.com/soap/BulkSoap")]
        [return: System.Xml.Serialization.SoapElementAttribute("getCountByPostCodeReturn")]
        public int getCountByPostCode(string postCode, int type) {
            object[] results = this.Invoke("getCountByPostCode", new object[] {
                        postCode,
                        type});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void getCountByPostCodeAsync(string postCode, int type) {
            this.getCountByPostCodeAsync(postCode, type, null);
        }
        
        /// <remarks/>
        public void getCountByPostCodeAsync(string postCode, int type, object userState) {
            if ((this.getCountByPostCodeOperationCompleted == null)) {
                this.getCountByPostCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCountByPostCodeOperationCompleted);
            }
            this.InvokeAsync("getCountByPostCode", new object[] {
                        postCode,
                        type}, this.getCountByPostCodeOperationCompleted, userState);
        }
        
        private void OngetCountByPostCodeOperationCompleted(object arg) {
            if ((this.getCountByPostCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCountByPostCodeCompleted(this, new getCountByPostCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://magfa.com/soap/BulkSoap", ResponseNamespace="http://magfa.com/soap/BulkSoap")]
        [return: System.Xml.Serialization.SoapElementAttribute("addRecipientsByPrefixReturn")]
        public string addRecipientsByPrefix(string bulkId, string prefix, int type, int fromIndex, int count) {
            object[] results = this.Invoke("addRecipientsByPrefix", new object[] {
                        bulkId,
                        prefix,
                        type,
                        fromIndex,
                        count});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void addRecipientsByPrefixAsync(string bulkId, string prefix, int type, int fromIndex, int count) {
            this.addRecipientsByPrefixAsync(bulkId, prefix, type, fromIndex, count, null);
        }
        
        /// <remarks/>
        public void addRecipientsByPrefixAsync(string bulkId, string prefix, int type, int fromIndex, int count, object userState) {
            if ((this.addRecipientsByPrefixOperationCompleted == null)) {
                this.addRecipientsByPrefixOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddRecipientsByPrefixOperationCompleted);
            }
            this.InvokeAsync("addRecipientsByPrefix", new object[] {
                        bulkId,
                        prefix,
                        type,
                        fromIndex,
                        count}, this.addRecipientsByPrefixOperationCompleted, userState);
        }
        
        private void OnaddRecipientsByPrefixOperationCompleted(object arg) {
            if ((this.addRecipientsByPrefixCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addRecipientsByPrefixCompleted(this, new addRecipientsByPrefixCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://magfa.com/soap/BulkSoap", ResponseNamespace="http://magfa.com/soap/BulkSoap")]
        [return: System.Xml.Serialization.SoapElementAttribute("addRecipientsByPostCodeReturn")]
        public string addRecipientsByPostCode(string bulkId, string postCode, int type, int fromIndex, int count) {
            object[] results = this.Invoke("addRecipientsByPostCode", new object[] {
                        bulkId,
                        postCode,
                        type,
                        fromIndex,
                        count});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void addRecipientsByPostCodeAsync(string bulkId, string postCode, int type, int fromIndex, int count) {
            this.addRecipientsByPostCodeAsync(bulkId, postCode, type, fromIndex, count, null);
        }
        
        /// <remarks/>
        public void addRecipientsByPostCodeAsync(string bulkId, string postCode, int type, int fromIndex, int count, object userState) {
            if ((this.addRecipientsByPostCodeOperationCompleted == null)) {
                this.addRecipientsByPostCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddRecipientsByPostCodeOperationCompleted);
            }
            this.InvokeAsync("addRecipientsByPostCode", new object[] {
                        bulkId,
                        postCode,
                        type,
                        fromIndex,
                        count}, this.addRecipientsByPostCodeOperationCompleted, userState);
        }
        
        private void OnaddRecipientsByPostCodeOperationCompleted(object arg) {
            if ((this.addRecipientsByPostCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addRecipientsByPostCodeCompleted(this, new addRecipientsByPostCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://magfa.com/soap/BulkSoap", ResponseNamespace="http://magfa.com/soap/BulkSoap")]
        [return: System.Xml.Serialization.SoapElementAttribute("removeRecipientsReturn")]
        public int removeRecipients(string bulkSmsId, string recipientsId) {
            object[] results = this.Invoke("removeRecipients", new object[] {
                        bulkSmsId,
                        recipientsId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void removeRecipientsAsync(string bulkSmsId, string recipientsId) {
            this.removeRecipientsAsync(bulkSmsId, recipientsId, null);
        }
        
        /// <remarks/>
        public void removeRecipientsAsync(string bulkSmsId, string recipientsId, object userState) {
            if ((this.removeRecipientsOperationCompleted == null)) {
                this.removeRecipientsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveRecipientsOperationCompleted);
            }
            this.InvokeAsync("removeRecipients", new object[] {
                        bulkSmsId,
                        recipientsId}, this.removeRecipientsOperationCompleted, userState);
        }
        
        private void OnremoveRecipientsOperationCompleted(object arg) {
            if ((this.removeRecipientsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removeRecipientsCompleted(this, new removeRecipientsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://magfa.com/soap/BulkSoap", ResponseNamespace="http://magfa.com/soap/BulkSoap")]
        [return: System.Xml.Serialization.SoapElementAttribute("submitBulkReturn")]
        public int submitBulk(string smsBulkId) {
            object[] results = this.Invoke("submitBulk", new object[] {
                        smsBulkId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void submitBulkAsync(string smsBulkId) {
            this.submitBulkAsync(smsBulkId, null);
        }
        
        /// <remarks/>
        public void submitBulkAsync(string smsBulkId, object userState) {
            if ((this.submitBulkOperationCompleted == null)) {
                this.submitBulkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsubmitBulkOperationCompleted);
            }
            this.InvokeAsync("submitBulk", new object[] {
                        smsBulkId}, this.submitBulkOperationCompleted, userState);
        }
        
        private void OnsubmitBulkOperationCompleted(object arg) {
            if ((this.submitBulkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.submitBulkCompleted(this, new submitBulkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://magfa.com/soap/BulkSoap", ResponseNamespace="http://magfa.com/soap/BulkSoap")]
        [return: System.Xml.Serialization.SoapElementAttribute("getCitiesOfProvinceReturn")]
        public string[] getCitiesOfProvince(int provinceId) {
            object[] results = this.Invoke("getCitiesOfProvince", new object[] {
                        provinceId});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void getCitiesOfProvinceAsync(int provinceId) {
            this.getCitiesOfProvinceAsync(provinceId, null);
        }
        
        /// <remarks/>
        public void getCitiesOfProvinceAsync(int provinceId, object userState) {
            if ((this.getCitiesOfProvinceOperationCompleted == null)) {
                this.getCitiesOfProvinceOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCitiesOfProvinceOperationCompleted);
            }
            this.InvokeAsync("getCitiesOfProvince", new object[] {
                        provinceId}, this.getCitiesOfProvinceOperationCompleted, userState);
        }
        
        private void OngetCitiesOfProvinceOperationCompleted(object arg) {
            if ((this.getCitiesOfProvinceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCitiesOfProvinceCompleted(this, new getCitiesOfProvinceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://magfa.com/soap/BulkSoap", ResponseNamespace="http://magfa.com/soap/BulkSoap")]
        [return: System.Xml.Serialization.SoapElementAttribute("createBulkReturn")]
        public string createBulk(string message, string senderNumber, int smsType, string sendDate, int sendHour, int sendMinute) {
            object[] results = this.Invoke("createBulk", new object[] {
                        message,
                        senderNumber,
                        smsType,
                        sendDate,
                        sendHour,
                        sendMinute});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void createBulkAsync(string message, string senderNumber, int smsType, string sendDate, int sendHour, int sendMinute) {
            this.createBulkAsync(message, senderNumber, smsType, sendDate, sendHour, sendMinute, null);
        }
        
        /// <remarks/>
        public void createBulkAsync(string message, string senderNumber, int smsType, string sendDate, int sendHour, int sendMinute, object userState) {
            if ((this.createBulkOperationCompleted == null)) {
                this.createBulkOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateBulkOperationCompleted);
            }
            this.InvokeAsync("createBulk", new object[] {
                        message,
                        senderNumber,
                        smsType,
                        sendDate,
                        sendHour,
                        sendMinute}, this.createBulkOperationCompleted, userState);
        }
        
        private void OncreateBulkOperationCompleted(object arg) {
            if ((this.createBulkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createBulkCompleted(this, new createBulkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://magfa.com/soap/BulkSoap", ResponseNamespace="http://magfa.com/soap/BulkSoap")]
        [return: System.Xml.Serialization.SoapElementAttribute("addRecipientsByCityProvinceReturn")]
        public string addRecipientsByCityProvince(string bulkId, int provinceId, int cityId, int type, int fromIndex, int count) {
            object[] results = this.Invoke("addRecipientsByCityProvince", new object[] {
                        bulkId,
                        provinceId,
                        cityId,
                        type,
                        fromIndex,
                        count});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void addRecipientsByCityProvinceAsync(string bulkId, int provinceId, int cityId, int type, int fromIndex, int count) {
            this.addRecipientsByCityProvinceAsync(bulkId, provinceId, cityId, type, fromIndex, count, null);
        }
        
        /// <remarks/>
        public void addRecipientsByCityProvinceAsync(string bulkId, int provinceId, int cityId, int type, int fromIndex, int count, object userState) {
            if ((this.addRecipientsByCityProvinceOperationCompleted == null)) {
                this.addRecipientsByCityProvinceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddRecipientsByCityProvinceOperationCompleted);
            }
            this.InvokeAsync("addRecipientsByCityProvince", new object[] {
                        bulkId,
                        provinceId,
                        cityId,
                        type,
                        fromIndex,
                        count}, this.addRecipientsByCityProvinceOperationCompleted, userState);
        }
        
        private void OnaddRecipientsByCityProvinceOperationCompleted(object arg) {
            if ((this.addRecipientsByCityProvinceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addRecipientsByCityProvinceCompleted(this, new addRecipientsByCityProvinceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://magfa.com/soap/BulkSoap", ResponseNamespace="http://magfa.com/soap/BulkSoap")]
        [return: System.Xml.Serialization.SoapElementAttribute("getPriceReturn")]
        public double getPrice(string bulkId) {
            object[] results = this.Invoke("getPrice", new object[] {
                        bulkId});
            return ((double)(results[0]));
        }
        
        /// <remarks/>
        public void getPriceAsync(string bulkId) {
            this.getPriceAsync(bulkId, null);
        }
        
        /// <remarks/>
        public void getPriceAsync(string bulkId, object userState) {
            if ((this.getPriceOperationCompleted == null)) {
                this.getPriceOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPriceOperationCompleted);
            }
            this.InvokeAsync("getPrice", new object[] {
                        bulkId}, this.getPriceOperationCompleted, userState);
        }
        
        private void OngetPriceOperationCompleted(object arg) {
            if ((this.getPriceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPriceCompleted(this, new getPriceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://magfa.com/soap/BulkSoap", ResponseNamespace="http://magfa.com/soap/BulkSoap")]
        [return: System.Xml.Serialization.SoapElementAttribute("getBulkStatusReturn")]
        public string getBulkStatus(string bulkId) {
            object[] results = this.Invoke("getBulkStatus", new object[] {
                        bulkId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getBulkStatusAsync(string bulkId) {
            this.getBulkStatusAsync(bulkId, null);
        }
        
        /// <remarks/>
        public void getBulkStatusAsync(string bulkId, object userState) {
            if ((this.getBulkStatusOperationCompleted == null)) {
                this.getBulkStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetBulkStatusOperationCompleted);
            }
            this.InvokeAsync("getBulkStatus", new object[] {
                        bulkId}, this.getBulkStatusOperationCompleted, userState);
        }
        
        private void OngetBulkStatusOperationCompleted(object arg) {
            if ((this.getBulkStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getBulkStatusCompleted(this, new getBulkStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getProvincesCompletedEventHandler(object sender, getProvincesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getProvincesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getProvincesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getCountByCityProvinceCompletedEventHandler(object sender, getCountByCityProvinceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCountByCityProvinceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCountByCityProvinceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getCountByPrefixCompletedEventHandler(object sender, getCountByPrefixCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCountByPrefixCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCountByPrefixCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getCountByPostCodeCompletedEventHandler(object sender, getCountByPostCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCountByPostCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCountByPostCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void addRecipientsByPrefixCompletedEventHandler(object sender, addRecipientsByPrefixCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addRecipientsByPrefixCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addRecipientsByPrefixCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void addRecipientsByPostCodeCompletedEventHandler(object sender, addRecipientsByPostCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addRecipientsByPostCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addRecipientsByPostCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void removeRecipientsCompletedEventHandler(object sender, removeRecipientsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class removeRecipientsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal removeRecipientsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void submitBulkCompletedEventHandler(object sender, submitBulkCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class submitBulkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal submitBulkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getCitiesOfProvinceCompletedEventHandler(object sender, getCitiesOfProvinceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCitiesOfProvinceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCitiesOfProvinceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void createBulkCompletedEventHandler(object sender, createBulkCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createBulkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createBulkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void addRecipientsByCityProvinceCompletedEventHandler(object sender, addRecipientsByCityProvinceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addRecipientsByCityProvinceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addRecipientsByCityProvinceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getPriceCompletedEventHandler(object sender, getPriceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPriceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPriceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public double Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getBulkStatusCompletedEventHandler(object sender, getBulkStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getBulkStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getBulkStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591