//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace Arad.SMS.Gateway.RahyabPGSmsSender.RahyabPGSmsWebService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="smsSoap", Namespace="http://srv-pardis.sms1000.ir/")]
    public partial class sms : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback HelloWorldOperationCompleted;
        
        private System.Threading.SendOrPostCallback doGetInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback doSendSMSOperationCompleted;
        
        private System.Threading.SendOrPostCallback doSendArraySMSOperationCompleted;
        
        private System.Threading.SendOrPostCallback doSendSMSArrayCOperationCompleted;
        
        private System.Threading.SendOrPostCallback doCheckClientIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback doGetDeliveryOperationCompleted;
        
        private System.Threading.SendOrPostCallback doReceiveSMSOperationCompleted;
        
        private System.Threading.SendOrPostCallback doReceiveSMSArrayOperationCompleted;
        
        private System.Threading.SendOrPostCallback getInfoXMLOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public sms() {
            this.Url = global::Arad.SMS.Gateway.RahyabPGSmsSender.Properties.Settings.Default.RahyabPGSmsSender_RahyabPGSmsSenderService_sms;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event HelloWorldCompletedEventHandler HelloWorldCompleted;
        
        /// <remarks/>
        public event doGetInfoCompletedEventHandler doGetInfoCompleted;
        
        /// <remarks/>
        public event doSendSMSCompletedEventHandler doSendSMSCompleted;
        
        /// <remarks/>
        public event doSendArraySMSCompletedEventHandler doSendArraySMSCompleted;
        
        /// <remarks/>
        public event doSendSMSArrayCCompletedEventHandler doSendSMSArrayCCompleted;
        
        /// <remarks/>
        public event doCheckClientIDCompletedEventHandler doCheckClientIDCompleted;
        
        /// <remarks/>
        public event doGetDeliveryCompletedEventHandler doGetDeliveryCompleted;
        
        /// <remarks/>
        public event doReceiveSMSCompletedEventHandler doReceiveSMSCompleted;
        
        /// <remarks/>
        public event doReceiveSMSArrayCompletedEventHandler doReceiveSMSArrayCompleted;
        
        /// <remarks/>
        public event getInfoXMLCompletedEventHandler getInfoXMLCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://srv-pardis.sms1000.ir/HelloWorld", RequestNamespace="http://srv-pardis.sms1000.ir/", ResponseNamespace="http://srv-pardis.sms1000.ir/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string HelloWorld() {
            object[] results = this.Invoke("HelloWorld", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void HelloWorldAsync() {
            this.HelloWorldAsync(null);
        }
        
        /// <remarks/>
        public void HelloWorldAsync(object userState) {
            if ((this.HelloWorldOperationCompleted == null)) {
                this.HelloWorldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHelloWorldOperationCompleted);
            }
            this.InvokeAsync("HelloWorld", new object[0], this.HelloWorldOperationCompleted, userState);
        }
        
        private void OnHelloWorldOperationCompleted(object arg) {
            if ((this.HelloWorldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HelloWorldCompleted(this, new HelloWorldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://srv-pardis.sms1000.ir/doGetInfo", RequestNamespace="http://srv-pardis.sms1000.ir/", ResponseNamespace="http://srv-pardis.sms1000.ir/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string doGetInfo(string uUsername, string uPassword) {
            object[] results = this.Invoke("doGetInfo", new object[] {
                        uUsername,
                        uPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void doGetInfoAsync(string uUsername, string uPassword) {
            this.doGetInfoAsync(uUsername, uPassword, null);
        }
        
        /// <remarks/>
        public void doGetInfoAsync(string uUsername, string uPassword, object userState) {
            if ((this.doGetInfoOperationCompleted == null)) {
                this.doGetInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetInfoOperationCompleted);
            }
            this.InvokeAsync("doGetInfo", new object[] {
                        uUsername,
                        uPassword}, this.doGetInfoOperationCompleted, userState);
        }
        
        private void OndoGetInfoOperationCompleted(object arg) {
            if ((this.doGetInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doGetInfoCompleted(this, new doGetInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://srv-pardis.sms1000.ir/doSendSMS", RequestNamespace="http://srv-pardis.sms1000.ir/", ResponseNamespace="http://srv-pardis.sms1000.ir/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string doSendSMS(string uUsername, string uPassword, string uNumber, string uCellphones, string uMessage, bool uFarsi, bool uTopic, bool uFlash, string uUDH) {
            object[] results = this.Invoke("doSendSMS", new object[] {
                        uUsername,
                        uPassword,
                        uNumber,
                        uCellphones,
                        uMessage,
                        uFarsi,
                        uTopic,
                        uFlash,
                        uUDH});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void doSendSMSAsync(string uUsername, string uPassword, string uNumber, string uCellphones, string uMessage, bool uFarsi, bool uTopic, bool uFlash, string uUDH) {
            this.doSendSMSAsync(uUsername, uPassword, uNumber, uCellphones, uMessage, uFarsi, uTopic, uFlash, uUDH, null);
        }
        
        /// <remarks/>
        public void doSendSMSAsync(string uUsername, string uPassword, string uNumber, string uCellphones, string uMessage, bool uFarsi, bool uTopic, bool uFlash, string uUDH, object userState) {
            if ((this.doSendSMSOperationCompleted == null)) {
                this.doSendSMSOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoSendSMSOperationCompleted);
            }
            this.InvokeAsync("doSendSMS", new object[] {
                        uUsername,
                        uPassword,
                        uNumber,
                        uCellphones,
                        uMessage,
                        uFarsi,
                        uTopic,
                        uFlash,
                        uUDH}, this.doSendSMSOperationCompleted, userState);
        }
        
        private void OndoSendSMSOperationCompleted(object arg) {
            if ((this.doSendSMSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doSendSMSCompleted(this, new doSendSMSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://srv-pardis.sms1000.ir/doSendArraySMS", RequestNamespace="http://srv-pardis.sms1000.ir/", ResponseNamespace="http://srv-pardis.sms1000.ir/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string doSendArraySMS(string uUsername, string uPassword, string[] uNumber, string[] uCellphone, string[] uMessage, bool[] uFarsi, bool[] uTopic, bool[] uFlash, string[] uUDH) {
            object[] results = this.Invoke("doSendArraySMS", new object[] {
                        uUsername,
                        uPassword,
                        uNumber,
                        uCellphone,
                        uMessage,
                        uFarsi,
                        uTopic,
                        uFlash,
                        uUDH});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void doSendArraySMSAsync(string uUsername, string uPassword, string[] uNumber, string[] uCellphone, string[] uMessage, bool[] uFarsi, bool[] uTopic, bool[] uFlash, string[] uUDH) {
            this.doSendArraySMSAsync(uUsername, uPassword, uNumber, uCellphone, uMessage, uFarsi, uTopic, uFlash, uUDH, null);
        }
        
        /// <remarks/>
        public void doSendArraySMSAsync(string uUsername, string uPassword, string[] uNumber, string[] uCellphone, string[] uMessage, bool[] uFarsi, bool[] uTopic, bool[] uFlash, string[] uUDH, object userState) {
            if ((this.doSendArraySMSOperationCompleted == null)) {
                this.doSendArraySMSOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoSendArraySMSOperationCompleted);
            }
            this.InvokeAsync("doSendArraySMS", new object[] {
                        uUsername,
                        uPassword,
                        uNumber,
                        uCellphone,
                        uMessage,
                        uFarsi,
                        uTopic,
                        uFlash,
                        uUDH}, this.doSendArraySMSOperationCompleted, userState);
        }
        
        private void OndoSendArraySMSOperationCompleted(object arg) {
            if ((this.doSendArraySMSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doSendArraySMSCompleted(this, new doSendArraySMSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://srv-pardis.sms1000.ir/doSendSMSArrayC", RequestNamespace="http://srv-pardis.sms1000.ir/", ResponseNamespace="http://srv-pardis.sms1000.ir/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public DataSendOut[] doSendSMSArrayC(string uUsername, string uPassword, [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] DataSendIn[] uDataSendIn) {
            object[] results = this.Invoke("doSendSMSArrayC", new object[] {
                        uUsername,
                        uPassword,
                        uDataSendIn});
            return ((DataSendOut[])(results[0]));
        }
        
        /// <remarks/>
        public void doSendSMSArrayCAsync(string uUsername, string uPassword, DataSendIn[] uDataSendIn) {
            this.doSendSMSArrayCAsync(uUsername, uPassword, uDataSendIn, null);
        }
        
        /// <remarks/>
        public void doSendSMSArrayCAsync(string uUsername, string uPassword, DataSendIn[] uDataSendIn, object userState) {
            if ((this.doSendSMSArrayCOperationCompleted == null)) {
                this.doSendSMSArrayCOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoSendSMSArrayCOperationCompleted);
            }
            this.InvokeAsync("doSendSMSArrayC", new object[] {
                        uUsername,
                        uPassword,
                        uDataSendIn}, this.doSendSMSArrayCOperationCompleted, userState);
        }
        
        private void OndoSendSMSArrayCOperationCompleted(object arg) {
            if ((this.doSendSMSArrayCCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doSendSMSArrayCCompleted(this, new doSendSMSArrayCCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://srv-pardis.sms1000.ir/doCheckClientID", RequestNamespace="http://srv-pardis.sms1000.ir/", ResponseNamespace="http://srv-pardis.sms1000.ir/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string doCheckClientID(string uUsername, string uClientIDs) {
            object[] results = this.Invoke("doCheckClientID", new object[] {
                        uUsername,
                        uClientIDs});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void doCheckClientIDAsync(string uUsername, string uClientIDs) {
            this.doCheckClientIDAsync(uUsername, uClientIDs, null);
        }
        
        /// <remarks/>
        public void doCheckClientIDAsync(string uUsername, string uClientIDs, object userState) {
            if ((this.doCheckClientIDOperationCompleted == null)) {
                this.doCheckClientIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoCheckClientIDOperationCompleted);
            }
            this.InvokeAsync("doCheckClientID", new object[] {
                        uUsername,
                        uClientIDs}, this.doCheckClientIDOperationCompleted, userState);
        }
        
        private void OndoCheckClientIDOperationCompleted(object arg) {
            if ((this.doCheckClientIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doCheckClientIDCompleted(this, new doCheckClientIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://srv-pardis.sms1000.ir/doGetDelivery", RequestNamespace="http://srv-pardis.sms1000.ir/", ResponseNamespace="http://srv-pardis.sms1000.ir/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string doGetDelivery(string uUsername, string uReturnIDs) {
            object[] results = this.Invoke("doGetDelivery", new object[] {
                        uUsername,
                        uReturnIDs});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void doGetDeliveryAsync(string uUsername, string uReturnIDs) {
            this.doGetDeliveryAsync(uUsername, uReturnIDs, null);
        }
        
        /// <remarks/>
        public void doGetDeliveryAsync(string uUsername, string uReturnIDs, object userState) {
            if ((this.doGetDeliveryOperationCompleted == null)) {
                this.doGetDeliveryOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetDeliveryOperationCompleted);
            }
            this.InvokeAsync("doGetDelivery", new object[] {
                        uUsername,
                        uReturnIDs}, this.doGetDeliveryOperationCompleted, userState);
        }
        
        private void OndoGetDeliveryOperationCompleted(object arg) {
            if ((this.doGetDeliveryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doGetDeliveryCompleted(this, new doGetDeliveryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://srv-pardis.sms1000.ir/doReceiveSMS", RequestNamespace="http://srv-pardis.sms1000.ir/", ResponseNamespace="http://srv-pardis.sms1000.ir/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string doReceiveSMS(string uUsername, string uPassword, long uLastRowID) {
            object[] results = this.Invoke("doReceiveSMS", new object[] {
                        uUsername,
                        uPassword,
                        uLastRowID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void doReceiveSMSAsync(string uUsername, string uPassword, long uLastRowID) {
            this.doReceiveSMSAsync(uUsername, uPassword, uLastRowID, null);
        }
        
        /// <remarks/>
        public void doReceiveSMSAsync(string uUsername, string uPassword, long uLastRowID, object userState) {
            if ((this.doReceiveSMSOperationCompleted == null)) {
                this.doReceiveSMSOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoReceiveSMSOperationCompleted);
            }
            this.InvokeAsync("doReceiveSMS", new object[] {
                        uUsername,
                        uPassword,
                        uLastRowID}, this.doReceiveSMSOperationCompleted, userState);
        }
        
        private void OndoReceiveSMSOperationCompleted(object arg) {
            if ((this.doReceiveSMSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doReceiveSMSCompleted(this, new doReceiveSMSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://srv-pardis.sms1000.ir/doReceiveSMSArray", RequestNamespace="http://srv-pardis.sms1000.ir/", ResponseNamespace="http://srv-pardis.sms1000.ir/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public MessageReceive[] doReceiveSMSArray(string uUsername, string uPassword, long uLastRowID) {
            object[] results = this.Invoke("doReceiveSMSArray", new object[] {
                        uUsername,
                        uPassword,
                        uLastRowID});
            return ((MessageReceive[])(results[0]));
        }
        
        /// <remarks/>
        public void doReceiveSMSArrayAsync(string uUsername, string uPassword, long uLastRowID) {
            this.doReceiveSMSArrayAsync(uUsername, uPassword, uLastRowID, null);
        }
        
        /// <remarks/>
        public void doReceiveSMSArrayAsync(string uUsername, string uPassword, long uLastRowID, object userState) {
            if ((this.doReceiveSMSArrayOperationCompleted == null)) {
                this.doReceiveSMSArrayOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoReceiveSMSArrayOperationCompleted);
            }
            this.InvokeAsync("doReceiveSMSArray", new object[] {
                        uUsername,
                        uPassword,
                        uLastRowID}, this.doReceiveSMSArrayOperationCompleted, userState);
        }
        
        private void OndoReceiveSMSArrayOperationCompleted(object arg) {
            if ((this.doReceiveSMSArrayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doReceiveSMSArrayCompleted(this, new doReceiveSMSArrayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://srv-pardis.sms1000.ir/getInfoXML", RequestNamespace="http://srv-pardis.sms1000.ir/", ResponseNamespace="http://srv-pardis.sms1000.ir/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getInfoXML(string uUsername, string uPassword) {
            object[] results = this.Invoke("getInfoXML", new object[] {
                        uUsername,
                        uPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getInfoXMLAsync(string uUsername, string uPassword) {
            this.getInfoXMLAsync(uUsername, uPassword, null);
        }
        
        /// <remarks/>
        public void getInfoXMLAsync(string uUsername, string uPassword, object userState) {
            if ((this.getInfoXMLOperationCompleted == null)) {
                this.getInfoXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetInfoXMLOperationCompleted);
            }
            this.InvokeAsync("getInfoXML", new object[] {
                        uUsername,
                        uPassword}, this.getInfoXMLOperationCompleted, userState);
        }
        
        private void OngetInfoXMLOperationCompleted(object arg) {
            if ((this.getInfoXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getInfoXMLCompleted(this, new getInfoXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://srv-pardis.sms1000.ir/")]
    public partial class DataSendIn {
        
        private long clientIDField;
        
        private string shortCodeField;
        
        private string cellphoneField;
        
        private string messageField;
        
        private bool farsiField;
        
        private bool flashField;
        
        private string uDHField;
        
        private string serviceIDField;
        
        /// <remarks/>
        public long ClientID {
            get {
                return this.clientIDField;
            }
            set {
                this.clientIDField = value;
            }
        }
        
        /// <remarks/>
        public string ShortCode {
            get {
                return this.shortCodeField;
            }
            set {
                this.shortCodeField = value;
            }
        }
        
        /// <remarks/>
        public string Cellphone {
            get {
                return this.cellphoneField;
            }
            set {
                this.cellphoneField = value;
            }
        }
        
        /// <remarks/>
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        public bool Farsi {
            get {
                return this.farsiField;
            }
            set {
                this.farsiField = value;
            }
        }
        
        /// <remarks/>
        public bool Flash {
            get {
                return this.flashField;
            }
            set {
                this.flashField = value;
            }
        }
        
        /// <remarks/>
        public string UDH {
            get {
                return this.uDHField;
            }
            set {
                this.uDHField = value;
            }
        }
        
        /// <remarks/>
        public string ServiceID {
            get {
                return this.serviceIDField;
            }
            set {
                this.serviceIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://srv-pardis.sms1000.ir/")]
    public partial class MessageReceive {
        
        private long rowIDField;
        
        private string dateTimeField;
        
        private string senderField;
        
        private string receiverField;
        
        private string messageField;
        
        /// <remarks/>
        public long RowID {
            get {
                return this.rowIDField;
            }
            set {
                this.rowIDField = value;
            }
        }
        
        /// <remarks/>
        public string DateTime {
            get {
                return this.dateTimeField;
            }
            set {
                this.dateTimeField = value;
            }
        }
        
        /// <remarks/>
        public string Sender {
            get {
                return this.senderField;
            }
            set {
                this.senderField = value;
            }
        }
        
        /// <remarks/>
        public string Receiver {
            get {
                return this.receiverField;
            }
            set {
                this.receiverField = value;
            }
        }
        
        /// <remarks/>
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://srv-pardis.sms1000.ir/")]
    public partial class DataSendOut {
        
        private long clientIDField;
        
        private long serverIDField;
        
        private string statusField;
        
        /// <remarks/>
        public long ClientID {
            get {
                return this.clientIDField;
            }
            set {
                this.clientIDField = value;
            }
        }
        
        /// <remarks/>
        public long ServerID {
            get {
                return this.serverIDField;
            }
            set {
                this.serverIDField = value;
            }
        }
        
        /// <remarks/>
        public string Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void HelloWorldCompletedEventHandler(object sender, HelloWorldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HelloWorldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HelloWorldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void doGetInfoCompletedEventHandler(object sender, doGetInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doGetInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doGetInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void doSendSMSCompletedEventHandler(object sender, doSendSMSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doSendSMSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doSendSMSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void doSendArraySMSCompletedEventHandler(object sender, doSendArraySMSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doSendArraySMSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doSendArraySMSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void doSendSMSArrayCCompletedEventHandler(object sender, doSendSMSArrayCCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doSendSMSArrayCCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doSendSMSArrayCCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DataSendOut[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DataSendOut[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void doCheckClientIDCompletedEventHandler(object sender, doCheckClientIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doCheckClientIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doCheckClientIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void doGetDeliveryCompletedEventHandler(object sender, doGetDeliveryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doGetDeliveryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doGetDeliveryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void doReceiveSMSCompletedEventHandler(object sender, doReceiveSMSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doReceiveSMSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doReceiveSMSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void doReceiveSMSArrayCompletedEventHandler(object sender, doReceiveSMSArrayCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doReceiveSMSArrayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doReceiveSMSArrayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MessageReceive[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MessageReceive[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getInfoXMLCompletedEventHandler(object sender, getInfoXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getInfoXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getInfoXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591